apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
  labels:
    name: ingress-nginx

---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: nginx-ingress
  namespace: kube-system
spec:
  chart: ingress-nginx
  repo: https://kubernetes.github.io/ingress-nginx
  targetNamespace: ingress-nginx
  valuesContent: |-
    controller:
      # Configurações de performance
      replicaCount: 2
      
      # Configurações de recursos
      resources:
        requests:
          cpu: 100m
          memory: 90Mi
        limits:
          cpu: 500m
          memory: 500Mi
      
      # Configurações de segurança
      config:
        # Rate limiting
        limit-rps: "100"
        limit-rpm: "6000"
        limit-connections: "100"
        
        # Timeouts
        proxy-connect-timeout: "5"
        proxy-send-timeout: "60"
        proxy-read-timeout: "60"
        
        # Buffer sizes
        proxy-buffer-size: "16k"
        proxy-buffers-number: "8"
        
        # SSL/TLS
        ssl-protocols: "TLSv1.2 TLSv1.3"
        ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
        ssl-prefer-server-ciphers: "true"
        
        # Security headers
        add-headers: "ingress-nginx/security-headers"
        
        # Hide server info
        server-tokens: "false"
        
        # Enable real IP
        use-forwarded-headers: "true"
        compute-full-forwarded-for: "true"
        
        # Log format
        log-format-escape-json: "true"
        log-format-upstream: '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id", "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol", "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer", "http_user_agent": "$http_user_agent"}'
      
      # Service configuration
      service:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          # Para AWS
          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
          service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
          # Para GCP
          cloud.google.com/load-balancer-type: "External"
          # Para Azure
          service.beta.kubernetes.io/azure-load-balancer-resource-group: "your-resource-group"
      
      # Metrics
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: monitoring
      
      # Admission webhooks
      admissionWebhooks:
        enabled: true
        patch:
          enabled: true
      
      # Node selector para nodes específicos (opcional)
      nodeSelector:
        kubernetes.io/os: linux
      
      # Tolerations para nodes tainted (opcional)
      tolerations: []
      
      # Affinity para distribuir pods
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - ingress-nginx
              topologyKey: kubernetes.io/hostname

---
# ConfigMap para security headers
apiVersion: v1
kind: ConfigMap
metadata:
  name: security-headers
  namespace: ingress-nginx
data:
  X-Frame-Options: "DENY"
  X-Content-Type-Options: "nosniff"
  X-XSS-Protection: "1; mode=block"
  Referrer-Policy: "strict-origin-when-cross-origin"
  Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';"
  Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
  Permissions-Policy: "geolocation=(), microphone=(), camera=()"

